=====> Melanie
- uses at least one “for” loop and one “while” loop to create an abstract design of your own choice. Use the command randcol to make it colourful [https://www.turtle.ox.ac.uk/downloads/docs/Turtle_Python_Exercises_1-12.pdf]
- creates a user interface for a calculator. It does not need to have any functionality implemented [https://realpython.com/tutorials/gui/]
- creates a tic tac toe game with a simple UI [https://realpython.com/tutorials/gui/]
- implements a simple string hashing algorithm and uses it on an arbitrary string [https://www.geeksforgeeks.org/string-hashing-using-polynomial-rolling-hash-function/]
- Generates a random maze represented by a 2d list using ones and zeroes. Find the shortest path from the top left corner of the maze to the bottom right corner using the A* search algorithm, then display your path. [https://en.wikipedia.org/wiki/A*_search_algorithm]
- determines if a word is an isogram [https://edabit.com/challenge/vTGXrd5ntYRk3t6Ma]
- when given an arbitrary string, apply an N shift caesar cypher to it [https://realpython.com/python-practice-problems/]
- is a python version of the unix tool wc [https://codingchallenges.substack.com/p/coding-challenge-1]
- is a python version of the unix tool uniq [https://codingchallenges.substack.com/p/coding-challenge-10-uniq]
- accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically. [https://github.com/darkprinx/break-the-ice-with-python/blob/master/Status/Day%202.md]
- swaps the first and last elements in a list [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- swaps an arbitrary two elements in a list [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]


======> Khan
- showcases the many ways to find the length of a list [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- finds the maximum of two numbers without using the max function [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- Finds the minimum of two numbers without using the min function [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- Determines whether or not a string is a palindrome or is symetrical [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- Reverses words in a given string in python [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- Finds the length of a string in python in 4 different ways [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- Prints the even length words in a string [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- Generates a binary search tree and Clones it [https://www.techiedelight.com/recursion-practice-problems-with-solutions/]
- generates a binary search tree and prints a top view of it it [https://www.techiedelight.com/recursion-practice-problems-with-solutions/]
- generates a binary search tree and Performs a postorder traversal [https://www.techiedelight.com/recursion-practice-problems-with-solutions/]
- Recursively calculates the value of N factorial [https://edabit.com/challenge/pPyAgyeNEvQsBytaR]
- Recursively sorts a stack of integers that you randomly generated [https://www.techiedelight.com/recursive-solution-sort-stack/]
- Finds a dataset of your choice online and create a predictive model for one of the portions of the data [https://elitedatascience.com/python-machine-learning-tutorial-scikit-learn]
- when given a csv and two columns from the csv, perform a linear regression on the data and generate a predictive model [https://realpython.com/linear-regression-in-python/]
- determines the sentiment of an amazon product review [https://realpython.com/sentiment-analysis-python/#conclusion]
- takes all of the datasets and removes the stop words from them and puts all of the words into a text file [https://realpython.com/sentiment-analysis-python/#tokenizing]
- takes all of the datasets and normalizes the sentences [https://realpython.com/sentiment-analysis-python/#tokenizing]
- loads the iris data from a given csv file into a dataframe and print the shape of the data, type of the data and first 3 rows. [https://www.w3resource.com/machine-learning/scikit-learn/iris/index.php]
- finds the mean, median, mode, and range of a list of numbers without using a library to do it [https://www.geeksforgeeks.org/statistics-with-python/]
- finds the standard deviation of a list of numbers [https://www.geeksforgeeks.org/standard-deviation-plot/?ref=ml_lbp]
- when given a list of numbers determines how far each number is from the average and displays it [https://www.codewars.com/kata/568ff914fc7a40a18500005c]
- Creates a python script that takes a csv file with the headers [headers here] and displays a histogram
- when given the side length of a square and the radius of a circle determines which has a larger area [https://edabit.com/challenge/4me7LifXBwj5rhL4n]
- implements a function that converts radians to degrees [https://edabit.com/challenge/2X2uZysLJ3CpsxLDD]
- inverts a tuple representing an rgb value (for example, the rgb rgb(164, 194, 244) goes to rgb(91, 61, 11)) [https://edabit.com/challenge/i6hY9JSjQK4jcaB6i]
- will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).The numbers obtained should be printed in a comma-separated sequence on a single line. [https://github.com/darkprinx/break-the-ice-with-python/blob/master/Status/Day%201.md]
- when given integral number n, write a program to generate a dictionary that contains (i, i x i) such that i is an integral number between 1 and n (both included). and then the program should print the dictionary. [https://github.com/darkprinx/break-the-ice-with-python/blob/master/Status/Day%201.md]
- calculates and prints the value according to the given formula: Q = Square root of [(2 _ C _ D)/H] Following are the fixed values of C and H: C is 50. H is 30. D is the variable whose values should be input to your program in a comma-separated sequence.
- accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence. [https://github.com/darkprinx/break-the-ice-with-python/blob/master/Status/Day%203.md]
- Uses list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers. [https://github.com/darkprinx/break-the-ice-with-python/blob/master/Status/Day%205.md]
- Defines a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n. [https://github.com/darkprinx/break-the-ice-with-python/blob/master/Status/Day%207.md]
- Generates a random weighted graph and use dijkstra's algorithm to find the shortest path [https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm#]
- is a flashcard class usable in other scripts [https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/]
- Defines a class which has at least two methods: 1. getString: to get a string from console input 2. printString: to print the string in upper case. Also please include simple test function to test the class methods. [https://github.com/darkprinx/break-the-ice-with-python/blob/master/Status/Day%202.md]
- uses the builder pattern to create a hamburger object out of several types of ingredients classes (cheese, bun, lettuce, beef, chicken, tomatoe, etc...) [https://refactoring.guru/design-patterns/builder]
- is a set of classes modeling a bank account with withdraw and deposit methods. Use inheritance so that you have two classes which inherit from the first, one of which has a minimum value for the bank account, and the other which has a maximum value for the bank account [https://buildmedia.readthedocs.org/media/pdf/python-practice-book/latest/python-practice-book.pdf]
- is three classes, each with a go method that prints "The [classname here] is going!" and takes advantage of polymorphism [https://www.youtube.com/watch?v=2hkngtWLGvE&pp=ygUdcHJhY3RpY2UgcG9seW1vcnBoaXNtIGluIGphdmE%3D]
